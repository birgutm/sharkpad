<?php

/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function leftandright_form_taxonomy_overview_vocabularies_alter(&$form, &$form_state, $form_id){
  $vocabularies = taxonomy_get_vocabularies();
  foreach($vocabularies as $vocabulary){
    $form[$vocabulary->vid]['rebuildlandr'] = array(
      '#type' => 'link',
      '#title' => t('rebuild tree'),
      '#href' => "admin/structure/taxonomy/$vocabulary->machine_name/rebuild"
    );
  }
  $form['#theme'] = array(
    'leftandright_taxonomy_overview_vocabularies'
  );
}

/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function leftandright_form_taxonomy_overview_terms_alter(&$form, &$form_state, $form_id){
  // We'll get a count of the number of terms in this taxonomy - if there is
  // more than 1000, we'll give the users a warning that not all terms are
  // being displayed and that they should use an alternative editor.
  if(current(db_query('SELECT COUNT(*) FROM {taxonomy_term_data} WHERE vid = :vid', array(
    ':vid' => $form['#vocabulary']->vid
  ))->fetchCol()) > 1000){
    $form['warning'] = array(
      '#markup' => '<p class="error">' . t('There is more than 1000 terms in this vocabulary.  We can only display the first 1000 for you.') . '</p>'
    );
  }
  // Add the vid so that the batch knows what to do!
  $form['vid'] = array(
    '#type' => 'hidden',
    '#value' => $form['#vocabulary']->vid
  );
  // Add an additional submit function to rebuild the tree.
  module_load_include('admin.inc', 'leftandright');
  $form['#submit'][] = 'leftandright_rebuild_tree_form_submit';
}

/**
 * Implementation of hook_menu
 */
function leftandright_menu(){
  return array(
    'admin/structure/taxonomy/%taxonomy_vocabulary_machine_name/rebuild' => array(
      'title' => 'Rebuild',
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
        'leftandright_rebuild_tree_form',
        3
      ),
      'access arguments' => array(
        'administer taxonomy'
      ),
      'type' => MENU_LOCAL_TASK,
      'weight' => -10,
      'file' => 'leftandright.admin.inc'
    )
  );
}

/**
 * Implementation of hook_theme().
 */
function leftandright_theme(){
  return array(
    'leftandright_taxonomy_overview_vocabularies' => array(
      'render element' => 'form',
      'file' => 'leftandright.theme.inc'
    )
  );
}

/**
 * Implementations of hook_taxonomy_insert
 */
function leftandright_taxonomy_term_insert($term){
  module_load_include('functions.inc', 'leftandright');
  leftandright_insert($term);
}

/**
 * Implementations of hook_taxonomy_update
 */
function leftandright_taxonomy_term_update($term){
  // Note, we can't just call delete then update, as that doesn't work with
  // branches.
  module_load_include('functions.inc', 'leftandright');
  leftandright_update($term);
}

/**
 * Implementations of hook_taxonomy_delete
 */
function leftandright_taxonomy_term_delete($term){
  module_load_include('functions.inc', 'leftandright');
  leftandright_delete($term);
}

/**
 * Implementation of hook_viewsapi
function leftandright_views_api(){
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'leftandright') . "/views"
  );
}
 */